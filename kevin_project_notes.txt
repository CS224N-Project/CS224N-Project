
==== AZURE VMs ====

Azure VM 1 - TensorFlow
Machine: rational-tf
User: neuron
ssh neuron@ip
Once you are done working, stop your VM!

Azure VM 1 - Theano
Machine: rational-theano
User: neuron
ssh neuron@ip
Once you are done working, stop your VM!


==== TASKS ====

_ implement tensorflow version in exact same/similar structure as theano (i.e. use their code framework exactly), then rearchitect (keep it simple and reproduce results as closely as possible)


==== INSTALLATION AND INITIAL RUN ====

https://github.com/taolei87/rcnn/tree/master/code/rationale

Commands that I ran...

pip install Theano

export PYTHONPATH=/Users/stanford/Desktop/Winter2017/CS224n/FinalProject/rcnn-master_tf/code
export PYTHONPATH=/Users/stanford/Desktop/Winter2017/CS224n/FinalProject/rcnn-master_theano/code

if GPU...
export THEANO_FLAGS='device=gpu,floatX=float32'

if no GPU...
export THEANO_FLAGS='device=cpu,floatX=float32'

Note: must run exports above (environment variable sets) with each new shell session, or else add to ~/.bash_profile (a unix shell script to execute at startup)

To see current environment variables:
printenv | more

python rationale.py --embedding /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/review+wiki.filtered.200.txt.gz --train /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/reviews.aspect1.train.txt.gz --dev /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/reviews.aspect1.heldout.txt.gz --load_rationale /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/annotations.json --aspect 0 --dump outputs.json --sparsity 0.0003 --coherent 2.0

python rationale.py                             # independent selection version
      --embedding /path/to/vectors              # path to load word vectors (required)
      --train reviews.aspect0.train.txt.gz      # path to training set (required)
      --dev reviews.aspect0.heldout.txt.gz      # path to development set (required)        
      --load_rationale annotations.json         # path to rationale annotation for testing (required)
      --aspect 0                                # which aspect (-1 means all aspects)
      --dump outputs.json                       # dump selected rationales and predictions
      --sparsity 0.0003 --coherent 2.0          # regularizations      



==== GENERATING SMALLER DATA SETS FOR FAST RUNS AND BASIC TESTING ====


python select_modified.py 1 /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/reviews.aspect1.heldout.txt.gz /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/reviews.aspect1.small

--- select.py requires sklearn, scipy etc. to be installed
--- created select_modified.py to modify some parameters
--- to run select_modified.py had to move select.py out of the directory! actually, renaming to select_.py also worked
--- first integer argument above is “aspect” and looks like 1,2,3 are valid as indicated by the sample train/heldout files provide… “aspect” specifies the element from the returned correlation coefficient matrix: https://docs.scipy.org/doc/numpy/reference/generated/numpy.corrcoef.html

python rationale.py --embedding /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/review+wiki.filtered.200.txt.gz --train /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/reviews.aspect1.small.train.txt.gz --dev /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/reviews.aspect1.small.heldout.txt.gz --load_rationale /Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer/annotations.json --aspect 0 --dump outputs.json --sparsity 0.0003 --coherent 2.0 --max_epochs 1 --hidden_dimension 20 --hidden_dimension2 3

--- with '.small' train / holdout files and additional parameters (--max_epochs 1 --hidden_dimension 20 --hidden_dimension2 3) a full run takes <3mins

--- example multi-line review entry from Beeradvocate.txt (raw data to be re-processed for further variety in testing):

beer/name: Sausa Weizen
beer/beerId: 47986
beer/brewerId: 10325
beer/ABV: 5.00
beer/style: Hefeweizen
review/appearance: 2.5
review/aroma: 2
review/palate: 1.5
review/taste: 1.5
review/overall: 1.5
review/time: 1234817823
review/profileName: stcules
review/text: A lot of foam. But a lot.  In the smell some banana, and then lactic and tart. Not a good start.   Quite dark orange in color, with a lively carbonation (now visible, under the foam).    Again tending to lactic sourness.       Same for the taste. With some yeast and banana.


==== AZURE COMMANDS ====

https://docs.google.com/document/d/1RhrTHOplbb_iTpOBE1luIESW2197xbaX8zw2lsifCow/edit#
https://bitbucket.org/jhong1/azure-gpu-setup/src

thought this (pre-installation) was needed, but instead need path var (post-installation):
http://askubuntu.com/questions/481414/install-nvidia-driver-instead-nouveau
==== CRITICAL POST-INSTALLATION STEP ===
export PATH=/usr/local/cuda-8.0/bin${PATH:+:${PATH}}
==== CRITICAL POST-INSTALLATION STEP ===

scp beer.zip neuron@65.52.234.33:

==== AZURE THEANO INSTALL ===

http://deeplearning.net/software/theano/tutorial/using_gpu.html

Following these instructions:
http://deeplearning.net/software/theano_versions/dev/install_ubuntu.html

https://conda.io/docs/install/quick.html
scp Miniconda2-latest-Linux-x86_64.sh neuron@65.52.234.33:
https://conda.io/docs/test-drive.html

https://developer.nvidia.com/cuda-downloads

FULL INSTRUCTIONS:
http://developer.download.nvidia.com/compute/cuda/8.0/secure/Prod2/docs/sidebar/CUDA_Installation_Guide_Linux.pdf

sudo dpkg -i cuda-repo-<distro>_<version>_<architecture>.deb
sudo dpkg -i cuda-repo-8.0.61_375.26_linux.deb

==== CRITICAL POST-INSTALLATION STEP ===
export PATH=/usr/local/cuda-8.0/bin${PATH:+:${PATH}}
==== CRITICAL POST-INSTALLATION STEP ===

also:
export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64\${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}


test with:
nvidia-smi
nvcc -V

pip install Theano

CUDA root directory:
/usr/local/cuda/bin

export CUDA_ROOT=/usr/local/cuda-8.0/bin${CUDA_ROOT:+:${CUDA_ROOT}}
or
THEANO_FLAGS='cuda.root=/usr/local/cuda-8.0/bin'

https://bruceoutdoors.wordpress.com/2016/07/29/setting-up-cudacudnn-for-theano-in-ubuntu/


============= RUN THESE COMMANDS AT START UP OF VIRTUAL MACHINE =============
export PYTHONPATH=/home/neuron/rcnn-master_copy/code
export THEANO_FLAGS='device=gpu,floatX=float32,cuda.root=/usr/local/cuda-8.0/bin'
export PATH=/usr/local/cuda-8.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64:/usr/local/cuda-8.0/extras/CUPTI/lib64"
export CUDA_HOME=/usr/local/cuda-8.0
============= RUN THESE COMMANDS AT START UP OF VIRTUAL MACHINE =============


export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64\${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}


python rationale.py --embedding /home/neuron/beer/review+wiki.filtered.200.txt.gz --train /home/neuron/beer/reviews.aspect1.train.txt.gz --dev /home/neuron/beer/reviews.aspect1.heldout.txt.gz --load_rationale /home/neuron/beer/annotations.json --aspect 0 --dump outputs.json --sparsity 0.0003 --coherent 2.0



to install cudnn...
wget https://web.stanford.edu/~jamesh93/tmp/cudnn-8.0-linux-x64-v5.1.tgz
tar xzvf cudnn-8.0-linux-x64-v5.1.tgz
sudo cp -P cuda/include/cudnn.h /usr/local/cuda/include/
sudo cp -P cuda/lib64/libcudnn* /usr/local/cuda/lib64/
sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*



echo $LD_LIBRARY_PATH

/home/neuron/cuda/lib64

run a Unix process in the background:
https://kb.iu.edu/d/afnz
also, IMPORTANT -- pipe the screen output to file

pipe to file AND make process run in background...
command |& tee output.txt &

tmux
http://askubuntu.com/questions/8653/how-to-keep-processes-running-after-ending-ssh-session

in a tmux run...

python rationale.py --embedding /home/neuron/beer/review+wiki.filtered.200.txt.gz --train /home/neuron/beer/reviews.aspect1.train.txt.gz --dev /home/neuron/beer/reviews.aspect1.heldout.txt.gz --load_rationale /home/neuron/beer/annotations.json --aspect 0 --dump outputs.json --sparsity 0.0003 --coherent 2.0 |& tee rationale_output.txt &


tmux cheatsheet:
https://gist.github.com/henrik/1967800


jobs
jobs -l (to get PID)


scp neuron@65.52.63.36:/home/neuron/rcnn-master_copy/code/rationale/rationale_output.txt .

scp beer.zip neuron@157.55.175.52:


rsync -avz --progress --partial beer.zip ssh neuron@157.55.175.52:



sudo mount -t cifs //myaccountname.file.core.windows.net/mysharename ./mymountpoint -o vers=3.0,username=myaccountname,password=StorageAccountKeyEndingIn==,dir_mode=0777,file_mode=0777,serverino

sudo apt-get install cifs-utils
sudo mkdir /mnt/mountpoint
sudo mount -t cifs //rationaldisks110.file.core.windows.net/beer /mnt/mountpoint -o vers=3.0,username=rationaldisks110,password=k8A+mV/VnC2tCEr6lWN7/shaA4KkXM3kGKhJhHXJAMMjpwAg4HMPqzeRcE5hAbbhCKRlUbbmF0mrQCZrBwg9Gg==,dir_mode=0777,file_mode=0777,serverino
df -h /mnt/mountpoint


wget http://people.csail.mit.edu/taolei/beer/annotations.json
wget http://people.csail.mit.edu/taolei/beer/review+wiki.filtered.200.txt.gz
wget http://people.csail.mit.edu/taolei/beer/reviews.aspect1.heldout.txt.gz
wget http://people.csail.mit.edu/taolei/beer/reviews.aspect1.train.txt.gz
wget http://people.csail.mit.edu/taolei/beer/reviews.aspect2.heldout.txt.gz
wget http://people.csail.mit.edu/taolei/beer/reviews.aspect2.train.txt.gz
wget http://people.csail.mit.edu/taolei/beer/reviews.aspect3.heldout.txt.gz
wget http://people.csail.mit.edu/taolei/beer/reviews.aspect3.train.txt.gz
wget http://people.csail.mit.edu/taolei/beer/select.py


scp main.py neuron@157.55.175.52:
scp preprocess.py neuron@157.55.175.52:

scp reviews.aspect1.small.heldout.txt.gz neuron@157.55.175.52:~/beer/
scp reviews.aspect1.small.train.txt.gz neuron@157.55.175.52:~/beer/


http://nlp.stanford.edu/projects/glove/
Wikipedia 2014 + Gigaword 5 (6B tokens, 400K vocab, uncased, 50d, 100d, 200d, & 300d vectors, 822 MB download): glove.6B.zip
Common Crawl (42B tokens, 1.9M vocab, uncased, 300d vectors, 1.75 GB download): glove.42B.300d.zip
Common Crawl (840B tokens, 2.2M vocab, cased, 300d vectors, 2.03 GB download): glove.840B.300d.zip

NOTE: for common crawl .zip use "tar -xvf <filename>" to extract


/Users/stanford/Desktop/Winter2017/CS224n/FinalProject/beer










